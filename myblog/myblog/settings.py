"""
Django settings for myblog project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
DEFAULT_FROM_EMAIL = 'test.django@inbox.ru'
EMAIL_HOST = 'smtp.mail.ru'
EMAIL_PORT = 587
EMAIL_HOST_USER = 'test.django@inbox.ru'
EMAIL_HOST_PASSWORD = '123098qazxsw'
EMAIL_USE_TLS = True
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '%4!o8xs(rqh&rqt)o4q1hci+k-!b_0#@%mfgs=8i2)*fni*n(o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Режим отладки

ALLOWED_HOSTS = ['mysite.com', 'localhost', '127.0.0.1']  # Добавление доема сайта для того чтобы Django мог с ним работать

SITE_ID = 1
# Application definition

INSTALLED_APPS = [
    'blog.apps.BlogConfig',
    'django.contrib.admin',  # сайт администрирования;
    'django.contrib.auth',  # подсистема аутентификации
    'django.contrib.contenttypes',  # подсистема для работы с типами объектов системы;
    'django.contrib.sessions',  # подсистема сессий;
    'django.contrib.messages',  # подсистема сообщений;
    'django.contrib.staticfiles',  # подсистема для управления статическим содержимым сайта;
    'django.contrib.sites',
    'django.contrib.sitemaps',
    'django.contrib.postgres',
    'social_django',
]
# Список промежуточных слоев
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # обрабатывает сессию запроса.
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # связывает пользователей и запросы с помощью сессий;
    'django.contrib.messages.middleware.MessageMiddleware',  # промежуточный слой сообщений
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# Python модуль который содержит корневые шаблоны URL'ов приложения
ROOT_URLCONF = 'myblog.urls'

AUTHENTICATION_BACKENDS = [
    'social_core.backends.vk.VKOAuth2',  # бекенд авторизации через ВКонтакте
    'django.contrib.auth.backends.ModelBackend', # бекенд классической аутентификации, чтобы работала авторизация через обычный логин и пароль
]
SOCIAL_AUTH_POSTGRES_JSONFIELD = True
SOCIAL_AUTH_VK_OAUTH2_KEY = '7749370'
SOCIAL_AUTH_VK_OAUTH2_SECRET = 'sWGiXwUhlOIpJkhPVRvk'
SOCIAL_AUTH_VK_OAUTH2_SCOPE = ['email']
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',  # Добавил эту строку
            ],
        },
    },
]

WSGI_APPLICATION = 'myblog.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'djangoblog',
        'USER': 'postgres',
        'PASSWORD': '123',
        'HOST': '',
        'PORT': '5432'
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LOGIN_REDIRECT_URL = 'blog:dashboard'
LOGIN_URL = 'login'
LANGUAGE_CODE = 'ru-ru'

TIME_ZONE = 'UTC'  # +3 Московское время. +5 Пакистанское( Екатеринбургское) время

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]
STATIC_URL = '/static/'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
